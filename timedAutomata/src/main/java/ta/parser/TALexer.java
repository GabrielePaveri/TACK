
package ta.parser;

import java.util.*;
import ta.expressions.*;
import ta.expressions.binary.*;
import ta.expressions.unary.*;
import ta.expressions.ternary.*;
import ta.*;
import ta.Transition;
import ta.SystemDecl;
import ta.declarations.Initializer;
import ta.declarations.Variable;
import ta.declarations.Variable;
import ta.TA;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class TALexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, LE=42, LEQ=43, GEQ=44, GE=45, EQCOMP=46, 
		NEQ=47, EQ=48, FRACTEQ=49, UNARYOP=50, MODEQ=51, PLUS=52, PLUSPLUS=53, 
		MINUSMINUS=54, MINUS=55, MULT=56, PLUSEQ=57, MINUSEQ=58, COLUMEQ=59, MULTEQ=60, 
		POWEQ=61, FRACT=62, MOD=63, POW=64, AND=65, OR=66, BITAND=67, BITANDEQ=68, 
		BITOREQ=69, BITOR=70, LPAR=71, RPAR=72, LBRA=73, RBRA=74, WS=75, ID=76, 
		NAT=77, TRUE=78, FALSE=79;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"LE", "LEQ", "GEQ", "GE", "EQCOMP", "NEQ", "EQ", "FRACTEQ", "UNARYOP", 
		"MODEQ", "PLUS", "PLUSPLUS", "MINUSMINUS", "MINUS", "MULT", "PLUSEQ", 
		"MINUSEQ", "COLUMEQ", "MULTEQ", "POWEQ", "FRACT", "MOD", "POW", "AND", 
		"OR", "BITAND", "BITANDEQ", "BITOREQ", "BITOR", "LPAR", "RPAR", "LBRA", 
		"RBRA", "WS", "ID", "NAT", "TRUE", "FALSE"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "';'", "'system'", "','", "'process'", "'{'", "'}'", "'struct'", 
		"'int'", "'clock'", "'char'", "'bool'", "'urgent'", "'broadcast'", "'const'", 
		"'commit'", "'typedef'", "'for'", "'while'", "'do'", "'if'", "'else'", 
		"'break'", "'continue'", "'switch'", "'return'", "'case'", "':'", "'default'", 
		"'state'", "'init'", "'trans'", "'->'", "'guard'", "'sync'", "'!'", "'?'", 
		"'assign'", "'~'", "'>>='", "'>>>='", "'<<='", "'<'", "'<='", "'>='", 
		"'>'", "'=='", "'!='", "'='", "'/='", null, "'%='", "'+'", "'++'", "'--'", 
		"'-'", "'*'", "'+='", "'-='", "':='", "'*='", "'^='", "'/'", "'%'", "'^'", 
		"'&&'", "'||'", "'&'", "'&='", "'|='", "'|'", "'('", "')'", "'['", "']'", 
		null, null, null, "'true'", "'false'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, "LE", "LEQ", "GEQ", "GE", "EQCOMP", 
		"NEQ", "EQ", "FRACTEQ", "UNARYOP", "MODEQ", "PLUS", "PLUSPLUS", "MINUSMINUS", 
		"MINUS", "MULT", "PLUSEQ", "MINUSEQ", "COLUMEQ", "MULTEQ", "POWEQ", "FRACT", 
		"MOD", "POW", "AND", "OR", "BITAND", "BITANDEQ", "BITOREQ", "BITOR", "LPAR", 
		"RPAR", "LBRA", "RBRA", "WS", "ID", "NAT", "TRUE", "FALSE"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public TALexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "TA.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2Q\u01e6\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\3\2\3\2\3\3\3\3\3\3\3\3"+
		"\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3"+
		"\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\13"+
		"\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3"+
		"\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3"+
		"\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3"+
		"\21\3\21\3\21\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3"+
		"\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3"+
		"\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3"+
		"\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3"+
		"\33\3\33\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3"+
		"\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3!\3!\3"+
		"!\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\3%\3%\3&\3&\3&\3&\3&\3"+
		"&\3&\3\'\3\'\3(\3(\3(\3(\3)\3)\3)\3)\3)\3*\3*\3*\3*\3+\3+\3,\3,\3,\3-"+
		"\3-\3-\3.\3.\3/\3/\3/\3\60\3\60\3\60\3\61\3\61\3\62\3\62\3\62\3\63\3\63"+
		"\3\64\3\64\3\64\3\65\3\65\3\66\3\66\3\66\3\67\3\67\3\67\38\38\39\39\3"+
		":\3:\3:\3;\3;\3;\3<\3<\3<\3=\3=\3=\3>\3>\3>\3?\3?\3@\3@\3A\3A\3B\3B\3"+
		"B\3C\3C\3C\3D\3D\3E\3E\3E\3F\3F\3F\3G\3G\3H\3H\3I\3I\3J\3J\3K\3K\3L\6"+
		"L\u01c8\nL\rL\16L\u01c9\3L\3L\3M\3M\7M\u01d0\nM\fM\16M\u01d3\13M\3N\3"+
		"N\7N\u01d7\nN\fN\16N\u01da\13N\3O\3O\3O\3O\3O\3P\3P\3P\3P\3P\3P\2\2Q\3"+
		"\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37"+
		"\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37="+
		" ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9"+
		"q:s;u<w=y>{?}@\177A\u0081B\u0083C\u0085D\u0087E\u0089F\u008bG\u008dH\u008f"+
		"I\u0091J\u0093K\u0095L\u0097M\u0099N\u009bO\u009dP\u009fQ\3\2\6\4\2##"+
		"//\5\2\13\f\17\17\"\"\4\2C\\c|\6\2\62;C\\aac|\u01e8\2\3\3\2\2\2\2\5\3"+
		"\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2"+
		"\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3"+
		"\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'"+
		"\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63"+
		"\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2"+
		"?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3"+
		"\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2"+
		"\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2"+
		"e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3"+
		"\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2"+
		"\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087"+
		"\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2"+
		"\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099"+
		"\3\2\2\2\2\u009b\3\2\2\2\2\u009d\3\2\2\2\2\u009f\3\2\2\2\3\u00a1\3\2\2"+
		"\2\5\u00a3\3\2\2\2\7\u00aa\3\2\2\2\t\u00ac\3\2\2\2\13\u00b4\3\2\2\2\r"+
		"\u00b6\3\2\2\2\17\u00b8\3\2\2\2\21\u00bf\3\2\2\2\23\u00c3\3\2\2\2\25\u00c9"+
		"\3\2\2\2\27\u00ce\3\2\2\2\31\u00d3\3\2\2\2\33\u00da\3\2\2\2\35\u00e4\3"+
		"\2\2\2\37\u00ea\3\2\2\2!\u00f1\3\2\2\2#\u00f9\3\2\2\2%\u00fd\3\2\2\2\'"+
		"\u0103\3\2\2\2)\u0106\3\2\2\2+\u0109\3\2\2\2-\u010e\3\2\2\2/\u0114\3\2"+
		"\2\2\61\u011d\3\2\2\2\63\u0124\3\2\2\2\65\u012b\3\2\2\2\67\u0130\3\2\2"+
		"\29\u0132\3\2\2\2;\u013a\3\2\2\2=\u0140\3\2\2\2?\u0145\3\2\2\2A\u014b"+
		"\3\2\2\2C\u014e\3\2\2\2E\u0154\3\2\2\2G\u0159\3\2\2\2I\u015b\3\2\2\2K"+
		"\u015d\3\2\2\2M\u0164\3\2\2\2O\u0166\3\2\2\2Q\u016a\3\2\2\2S\u016f\3\2"+
		"\2\2U\u0173\3\2\2\2W\u0175\3\2\2\2Y\u0178\3\2\2\2[\u017b\3\2\2\2]\u017d"+
		"\3\2\2\2_\u0180\3\2\2\2a\u0183\3\2\2\2c\u0185\3\2\2\2e\u0188\3\2\2\2g"+
		"\u018a\3\2\2\2i\u018d\3\2\2\2k\u018f\3\2\2\2m\u0192\3\2\2\2o\u0195\3\2"+
		"\2\2q\u0197\3\2\2\2s\u0199\3\2\2\2u\u019c\3\2\2\2w\u019f\3\2\2\2y\u01a2"+
		"\3\2\2\2{\u01a5\3\2\2\2}\u01a8\3\2\2\2\177\u01aa\3\2\2\2\u0081\u01ac\3"+
		"\2\2\2\u0083\u01ae\3\2\2\2\u0085\u01b1\3\2\2\2\u0087\u01b4\3\2\2\2\u0089"+
		"\u01b6\3\2\2\2\u008b\u01b9\3\2\2\2\u008d\u01bc\3\2\2\2\u008f\u01be\3\2"+
		"\2\2\u0091\u01c0\3\2\2\2\u0093\u01c2\3\2\2\2\u0095\u01c4\3\2\2\2\u0097"+
		"\u01c7\3\2\2\2\u0099\u01cd\3\2\2\2\u009b\u01d4\3\2\2\2\u009d\u01db\3\2"+
		"\2\2\u009f\u01e0\3\2\2\2\u00a1\u00a2\7=\2\2\u00a2\4\3\2\2\2\u00a3\u00a4"+
		"\7u\2\2\u00a4\u00a5\7{\2\2\u00a5\u00a6\7u\2\2\u00a6\u00a7\7v\2\2\u00a7"+
		"\u00a8\7g\2\2\u00a8\u00a9\7o\2\2\u00a9\6\3\2\2\2\u00aa\u00ab\7.\2\2\u00ab"+
		"\b\3\2\2\2\u00ac\u00ad\7r\2\2\u00ad\u00ae\7t\2\2\u00ae\u00af\7q\2\2\u00af"+
		"\u00b0\7e\2\2\u00b0\u00b1\7g\2\2\u00b1\u00b2\7u\2\2\u00b2\u00b3\7u\2\2"+
		"\u00b3\n\3\2\2\2\u00b4\u00b5\7}\2\2\u00b5\f\3\2\2\2\u00b6\u00b7\7\177"+
		"\2\2\u00b7\16\3\2\2\2\u00b8\u00b9\7u\2\2\u00b9\u00ba\7v\2\2\u00ba\u00bb"+
		"\7t\2\2\u00bb\u00bc\7w\2\2\u00bc\u00bd\7e\2\2\u00bd\u00be\7v\2\2\u00be"+
		"\20\3\2\2\2\u00bf\u00c0\7k\2\2\u00c0\u00c1\7p\2\2\u00c1\u00c2\7v\2\2\u00c2"+
		"\22\3\2\2\2\u00c3\u00c4\7e\2\2\u00c4\u00c5\7n\2\2\u00c5\u00c6\7q\2\2\u00c6"+
		"\u00c7\7e\2\2\u00c7\u00c8\7m\2\2\u00c8\24\3\2\2\2\u00c9\u00ca\7e\2\2\u00ca"+
		"\u00cb\7j\2\2\u00cb\u00cc\7c\2\2\u00cc\u00cd\7t\2\2\u00cd\26\3\2\2\2\u00ce"+
		"\u00cf\7d\2\2\u00cf\u00d0\7q\2\2\u00d0\u00d1\7q\2\2\u00d1\u00d2\7n\2\2"+
		"\u00d2\30\3\2\2\2\u00d3\u00d4\7w\2\2\u00d4\u00d5\7t\2\2\u00d5\u00d6\7"+
		"i\2\2\u00d6\u00d7\7g\2\2\u00d7\u00d8\7p\2\2\u00d8\u00d9\7v\2\2\u00d9\32"+
		"\3\2\2\2\u00da\u00db\7d\2\2\u00db\u00dc\7t\2\2\u00dc\u00dd\7q\2\2\u00dd"+
		"\u00de\7c\2\2\u00de\u00df\7f\2\2\u00df\u00e0\7e\2\2\u00e0\u00e1\7c\2\2"+
		"\u00e1\u00e2\7u\2\2\u00e2\u00e3\7v\2\2\u00e3\34\3\2\2\2\u00e4\u00e5\7"+
		"e\2\2\u00e5\u00e6\7q\2\2\u00e6\u00e7\7p\2\2\u00e7\u00e8\7u\2\2\u00e8\u00e9"+
		"\7v\2\2\u00e9\36\3\2\2\2\u00ea\u00eb\7e\2\2\u00eb\u00ec\7q\2\2\u00ec\u00ed"+
		"\7o\2\2\u00ed\u00ee\7o\2\2\u00ee\u00ef\7k\2\2\u00ef\u00f0\7v\2\2\u00f0"+
		" \3\2\2\2\u00f1\u00f2\7v\2\2\u00f2\u00f3\7{\2\2\u00f3\u00f4\7r\2\2\u00f4"+
		"\u00f5\7g\2\2\u00f5\u00f6\7f\2\2\u00f6\u00f7\7g\2\2\u00f7\u00f8\7h\2\2"+
		"\u00f8\"\3\2\2\2\u00f9\u00fa\7h\2\2\u00fa\u00fb\7q\2\2\u00fb\u00fc\7t"+
		"\2\2\u00fc$\3\2\2\2\u00fd\u00fe\7y\2\2\u00fe\u00ff\7j\2\2\u00ff\u0100"+
		"\7k\2\2\u0100\u0101\7n\2\2\u0101\u0102\7g\2\2\u0102&\3\2\2\2\u0103\u0104"+
		"\7f\2\2\u0104\u0105\7q\2\2\u0105(\3\2\2\2\u0106\u0107\7k\2\2\u0107\u0108"+
		"\7h\2\2\u0108*\3\2\2\2\u0109\u010a\7g\2\2\u010a\u010b\7n\2\2\u010b\u010c"+
		"\7u\2\2\u010c\u010d\7g\2\2\u010d,\3\2\2\2\u010e\u010f\7d\2\2\u010f\u0110"+
		"\7t\2\2\u0110\u0111\7g\2\2\u0111\u0112\7c\2\2\u0112\u0113\7m\2\2\u0113"+
		".\3\2\2\2\u0114\u0115\7e\2\2\u0115\u0116\7q\2\2\u0116\u0117\7p\2\2\u0117"+
		"\u0118\7v\2\2\u0118\u0119\7k\2\2\u0119\u011a\7p\2\2\u011a\u011b\7w\2\2"+
		"\u011b\u011c\7g\2\2\u011c\60\3\2\2\2\u011d\u011e\7u\2\2\u011e\u011f\7"+
		"y\2\2\u011f\u0120\7k\2\2\u0120\u0121\7v\2\2\u0121\u0122\7e\2\2\u0122\u0123"+
		"\7j\2\2\u0123\62\3\2\2\2\u0124\u0125\7t\2\2\u0125\u0126\7g\2\2\u0126\u0127"+
		"\7v\2\2\u0127\u0128\7w\2\2\u0128\u0129\7t\2\2\u0129\u012a\7p\2\2\u012a"+
		"\64\3\2\2\2\u012b\u012c\7e\2\2\u012c\u012d\7c\2\2\u012d\u012e\7u\2\2\u012e"+
		"\u012f\7g\2\2\u012f\66\3\2\2\2\u0130\u0131\7<\2\2\u01318\3\2\2\2\u0132"+
		"\u0133\7f\2\2\u0133\u0134\7g\2\2\u0134\u0135\7h\2\2\u0135\u0136\7c\2\2"+
		"\u0136\u0137\7w\2\2\u0137\u0138\7n\2\2\u0138\u0139\7v\2\2\u0139:\3\2\2"+
		"\2\u013a\u013b\7u\2\2\u013b\u013c\7v\2\2\u013c\u013d\7c\2\2\u013d\u013e"+
		"\7v\2\2\u013e\u013f\7g\2\2\u013f<\3\2\2\2\u0140\u0141\7k\2\2\u0141\u0142"+
		"\7p\2\2\u0142\u0143\7k\2\2\u0143\u0144\7v\2\2\u0144>\3\2\2\2\u0145\u0146"+
		"\7v\2\2\u0146\u0147\7t\2\2\u0147\u0148\7c\2\2\u0148\u0149\7p\2\2\u0149"+
		"\u014a\7u\2\2\u014a@\3\2\2\2\u014b\u014c\7/\2\2\u014c\u014d\7@\2\2\u014d"+
		"B\3\2\2\2\u014e\u014f\7i\2\2\u014f\u0150\7w\2\2\u0150\u0151\7c\2\2\u0151"+
		"\u0152\7t\2\2\u0152\u0153\7f\2\2\u0153D\3\2\2\2\u0154\u0155\7u\2\2\u0155"+
		"\u0156\7{\2\2\u0156\u0157\7p\2\2\u0157\u0158\7e\2\2\u0158F\3\2\2\2\u0159"+
		"\u015a\7#\2\2\u015aH\3\2\2\2\u015b\u015c\7A\2\2\u015cJ\3\2\2\2\u015d\u015e"+
		"\7c\2\2\u015e\u015f\7u\2\2\u015f\u0160\7u\2\2\u0160\u0161\7k\2\2\u0161"+
		"\u0162\7i\2\2\u0162\u0163\7p\2\2\u0163L\3\2\2\2\u0164\u0165\7\u0080\2"+
		"\2\u0165N\3\2\2\2\u0166\u0167\7@\2\2\u0167\u0168\7@\2\2\u0168\u0169\7"+
		"?\2\2\u0169P\3\2\2\2\u016a\u016b\7@\2\2\u016b\u016c\7@\2\2\u016c\u016d"+
		"\7@\2\2\u016d\u016e\7?\2\2\u016eR\3\2\2\2\u016f\u0170\7>\2\2\u0170\u0171"+
		"\7>\2\2\u0171\u0172\7?\2\2\u0172T\3\2\2\2\u0173\u0174\7>\2\2\u0174V\3"+
		"\2\2\2\u0175\u0176\7>\2\2\u0176\u0177\7?\2\2\u0177X\3\2\2\2\u0178\u0179"+
		"\7@\2\2\u0179\u017a\7?\2\2\u017aZ\3\2\2\2\u017b\u017c\7@\2\2\u017c\\\3"+
		"\2\2\2\u017d\u017e\7?\2\2\u017e\u017f\7?\2\2\u017f^\3\2\2\2\u0180\u0181"+
		"\7#\2\2\u0181\u0182\7?\2\2\u0182`\3\2\2\2\u0183\u0184\7?\2\2\u0184b\3"+
		"\2\2\2\u0185\u0186\7\61\2\2\u0186\u0187\7?\2\2\u0187d\3\2\2\2\u0188\u0189"+
		"\t\2\2\2\u0189f\3\2\2\2\u018a\u018b\7\'\2\2\u018b\u018c\7?\2\2\u018ch"+
		"\3\2\2\2\u018d\u018e\7-\2\2\u018ej\3\2\2\2\u018f\u0190\7-\2\2\u0190\u0191"+
		"\7-\2\2\u0191l\3\2\2\2\u0192\u0193\7/\2\2\u0193\u0194\7/\2\2\u0194n\3"+
		"\2\2\2\u0195\u0196\7/\2\2\u0196p\3\2\2\2\u0197\u0198\7,\2\2\u0198r\3\2"+
		"\2\2\u0199\u019a\7-\2\2\u019a\u019b\7?\2\2\u019bt\3\2\2\2\u019c\u019d"+
		"\7/\2\2\u019d\u019e\7?\2\2\u019ev\3\2\2\2\u019f\u01a0\7<\2\2\u01a0\u01a1"+
		"\7?\2\2\u01a1x\3\2\2\2\u01a2\u01a3\7,\2\2\u01a3\u01a4\7?\2\2\u01a4z\3"+
		"\2\2\2\u01a5\u01a6\7`\2\2\u01a6\u01a7\7?\2\2\u01a7|\3\2\2\2\u01a8\u01a9"+
		"\7\61\2\2\u01a9~\3\2\2\2\u01aa\u01ab\7\'\2\2\u01ab\u0080\3\2\2\2\u01ac"+
		"\u01ad\7`\2\2\u01ad\u0082\3\2\2\2\u01ae\u01af\7(\2\2\u01af\u01b0\7(\2"+
		"\2\u01b0\u0084\3\2\2\2\u01b1\u01b2\7~\2\2\u01b2\u01b3\7~\2\2\u01b3\u0086"+
		"\3\2\2\2\u01b4\u01b5\7(\2\2\u01b5\u0088\3\2\2\2\u01b6\u01b7\7(\2\2\u01b7"+
		"\u01b8\7?\2\2\u01b8\u008a\3\2\2\2\u01b9\u01ba\7~\2\2\u01ba\u01bb\7?\2"+
		"\2\u01bb\u008c\3\2\2\2\u01bc\u01bd\7~\2\2\u01bd\u008e\3\2\2\2\u01be\u01bf"+
		"\7*\2\2\u01bf\u0090\3\2\2\2\u01c0\u01c1\7+\2\2\u01c1\u0092\3\2\2\2\u01c2"+
		"\u01c3\7]\2\2\u01c3\u0094\3\2\2\2\u01c4\u01c5\7_\2\2\u01c5\u0096\3\2\2"+
		"\2\u01c6\u01c8\t\3\2\2\u01c7\u01c6\3\2\2\2\u01c8\u01c9\3\2\2\2\u01c9\u01c7"+
		"\3\2\2\2\u01c9\u01ca\3\2\2\2\u01ca\u01cb\3\2\2\2\u01cb\u01cc\bL\2\2\u01cc"+
		"\u0098\3\2\2\2\u01cd\u01d1\t\4\2\2\u01ce\u01d0\t\5\2\2\u01cf\u01ce\3\2"+
		"\2\2\u01d0\u01d3\3\2\2\2\u01d1\u01cf\3\2\2\2\u01d1\u01d2\3\2\2\2\u01d2"+
		"\u009a\3\2\2\2\u01d3\u01d1\3\2\2\2\u01d4\u01d8\4\62;\2\u01d5\u01d7\4\62"+
		";\2\u01d6\u01d5\3\2\2\2\u01d7\u01da\3\2\2\2\u01d8\u01d6\3\2\2\2\u01d8"+
		"\u01d9\3\2\2\2\u01d9\u009c\3\2\2\2\u01da\u01d8\3\2\2\2\u01db\u01dc\7v"+
		"\2\2\u01dc\u01dd\7t\2\2\u01dd\u01de\7w\2\2\u01de\u01df\7g\2\2\u01df\u009e"+
		"\3\2\2\2\u01e0\u01e1\7h\2\2\u01e1\u01e2\7c\2\2\u01e2\u01e3\7n\2\2\u01e3"+
		"\u01e4\7u\2\2\u01e4\u01e5\7g\2\2\u01e5\u00a0\3\2\2\2\6\2\u01c9\u01d1\u01d8"+
		"\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}